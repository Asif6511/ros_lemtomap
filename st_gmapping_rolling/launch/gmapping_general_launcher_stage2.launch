<!-- General launcher to launch all kind of variations of gmapping -->
<!-- gmapping parameters were mostly based on turtlebot_navivation/launch/inludes/gmapping.launch.xml -->
<launch>
	<arg name="scan_topic" default="scan" />
	<arg name="rolling" default="false"/>
	<arg name="windowsize" default="20"/>
	<arg name="perfect_odometry" default="false"/> <!-- leave empty to assume normal odo, fill anything to activate perfect odometry utilization -->
	<arg name="particles" default="80"/>
	<arg name="minimum_score" default="0"/>

	<arg     if="$(arg perfect_odometry)" name="sigma" value="0.00"/>
	<arg unless="$(arg perfect_odometry)" name="sigma" value="0.05"/>

	<arg     if="$(arg perfect_odometry)" name="linearUpdate" value="1000000"/> <!-- never trigger update -->
	<arg unless="$(arg perfect_odometry)" name="linearUpdate" value="0.5"/>

	<arg     if="$(arg perfect_odometry)" name="angularUpdate" value="1000000"/> <!-- never trigger update -->
	<arg unless="$(arg perfect_odometry)" name="angularUpdate" value="0.436"/>

	<arg     if="$(arg perfect_odometry)" name="srr" value="0.0"/> <!-- assume perfect odom -->
	<arg unless="$(arg perfect_odometry)" name="srr" value="0.01"/>

	<arg     if="$(arg perfect_odometry)" name="srt" value="0.0"/> <!-- assume perfect odom -->
	<arg unless="$(arg perfect_odometry)" name="srt" value="0.02"/>

	<arg     if="$(arg perfect_odometry)" name="str" value="0.0"/> <!-- assume perfect odom -->
	<arg unless="$(arg perfect_odometry)" name="str" value="0.01"/>

	<arg     if="$(arg perfect_odometry)" name="stt" value="0.0"/> <!-- assume perfect odom -->
	<arg unless="$(arg perfect_odometry)" name="stt" value="0.02"/>

	<arg     if="$(arg rolling)" name="windowsize_param" value="$(arg windowsize)"/>
	<arg unless="$(arg rolling)" name="windowsize_param" value=""/>

	<node pkg="st_gmapping_rolling" type="st_gmapping_rolling" name="st_gmapping_rolling"
		output="screen" clear_params="true">
		<param name="base_frame" value="base_footprint" />
		<param name="odom_frame" value="odom" />
		<param name="map_update_interval" value="5.0" />
		<param name="maxUrange" value="5.5" /> <!-- (5.5 for Hokuyo, 6 for Kinect) Default is 80, this should not be necessary -->
		<param name="maxRange" value="5.6" />
                <!-- (Either comment out, or 5.6 for Hokuyo, 8 for Kinect) Official documentation: The maximum range 
			of the sensor. If regions with no obstacles within the range of the sensor 
			should appear as free space in the map, set maxUrange < maximum range of 
			the real sensor <= maxRange. -->
		<param name="sigma" value="$(arg sigma)" />
		<param name="kernelSize" value="1" /> <!--does this define the size of the region searched for scan-matching? seems related to convulition, i.e. correlation-->
		<param name="lstep" value="0.05" /> <!--?-->
		<param name="astep" value="0.05" /> <!--?-->
		<param name="iterations" value="5" />
		<param name="lsigma" value="0.075" /> <!--?-->
		<param name="ogain" value="3.0" /> <!--?-->
		<param name="lskip" value="0" />
		<param name="srr" value="$(arg srr)" /> <!-- seems to define the noise matrix for the EKF for map updates -->
		<param name="srt" value="$(arg srt)" /> <!-- seems to define the noise matrix for the EKF for map updates -->
		<param name="str" value="$(arg str)" /> <!-- seems to define the noise matrix for the EKF for map updates -->
		<param name="stt" value="$(arg stt)" /> <!-- seems to define the noise matrix for the EKF for map updates -->
		<param name="linearUpdate" value="$(arg linearUpdate)" /> <!-- default is 1m, turtlebot 0.5m, gmapping orig article 0.5m -->
		<param name="angularUpdate" value="$(arg angularUpdate)" /> <!-- default is 0.5rad(28.6deg), turtlebot 0.436rad(25deg), gmapping orig article 0.436rad(25deg) -->
		<param name="temporalUpdate" value="-1.0" />
		<param name="resampleThreshold" value="0.5" /> <!-- 0.5 means: resample if Neff < 0.5*N. See gmapping article grisetti2007, formula 20. -->
		<param name="particles" value="$(arg particles)" /> <!-- default 30, turtlebot default 80 -->

		<param name="xmin" value="-30.0" />
		<param name="ymin" value="-30.0" />
		<param name="xmax" value="30.0" />
		<param name="ymax" value="30.0" />

		<param name="delta" value="0.05" /> <!-- Processing parameters (resolution of the map)  -->
		<param name="llsamplerange" value="0.01" /> <!-- ? -->
		<param name="llsamplestep" value="0.01" /> <!-- ? -->
		<param name="lasamplerange" value="0.005" /> <!-- ? -->
		<param name="lasamplestep" value="0.005" /> <!-- ? -->

		<param name="minimumScore" value="$(arg minimum_score)" /> <!-- I added this feature myself, default was 0, but setting to e.g. 50 makes it neglect poor scan_matching... (zero means it only neglects failed scan-matching) -->

		<param name="windowsize" value="$(arg windowsize_param)" />

		<remap from="scan" to="$(arg scan_topic)" />
	</node>

</launch>
